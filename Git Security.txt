
Git Security
Up to this point, we have used HTTPS to connect to our remote repository.

HTTPS will usually work just fine, but you should use SSH if you work with unsecured networks.
And sometimes, a project will require that you use SSH.

What is SSH
SSH is a secure shell network protocol that is used for network management,
remote file transfer, and remote system access.

SSH uses a pair of SSH keys to establish an authenticated and encrypted
secure network protocol. It allows for secure remote communication on unsecured open networks.

SSH keys are used to initiate a secure "handshake". When generating a set of
keys, you will generate a "public" and "private" key.

The "public" key is the one you share with the remote party. Think of this more as the lock.

The "private" key is the one you keep for yourself in a secure place. Think of this
as the key to the lock.

SSH keys are generated through a security algorithm. It is all very complicated,
but it uses prime numbers, and large random numbers to make the public and private key.

It is created so that the public key can be derived from the private key,
but not the other way around.

Generating an SSH Key Pair
In the command line for Linux, Apple, and in the Git Bash for Windows,
you can generate an SSH key.

Let's go through it, step by step.

1 .Start by creating a new key, using your email as a label: ssh-keygen -t rsa -b 4096 -C "dmarlovic83@gmail.com"
2. Add this SSH key pair to the SSH-Agent. In windows we need to just start SSH-Agent:
-----------------------------------------------------------------
PS C:\WINDOWS\system32> start-ssh-agent
Removing old ssh-agent sockets
Starting ssh-agent:  done
Enter passphrase for /c/Users/dmarl/.ssh/id_rsa:
Identity added: /c/Users/dmarl/.ssh/id_rsa (dmarlovic83@gmail.com)
-------------------------------------------------------------------
3. copy the public key from generated public-key file: C:\Users\dmarl\.ssh\id_rsa.pub

4. Go to GitHub:
 select "SSH and GPG keys". and click the "New SSH key" button
 Select a title, and paste the public SSH key into the "Key" field, and click "Add SSH Key".

 When we have created the SSH key on GitHub we can test it:

 ssh -T git@github.com

 5. To push we need to add new GitHub SSH Remote to our repository:

 Example: git remote add ssh-origin git@github.com:w3schools-test/hello-world.git
